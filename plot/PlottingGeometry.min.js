OpenLayers.Geometry.GeoLinePlotting=OpenLayers.Class(OpenLayers.Geometry.LineString,{_controlPoints:[],initialize:function(a){OpenLayers.Geometry.LineString.prototype.initialize.apply(this,arguments);(this._controlPoints=a)&&0<a.length&&this.calculateParts()},getArea:function(){var a=0;if(this.components&&0<this.components.length)for(var a=a+Math.abs(this.components[0].getArea()),b=1,c=this.components.length;b<c;b++)a-=Math.abs(this.components[b].getArea());return a},getControlPoints:function(){return this._controlPoints},setControlPoint:function(a){a&&a.length&&0<a.length&&(this._controlPoints=a,this.calculateParts())},clone:function(){for(var a=new OpenLayers.Geometry.GeoLinePlotting,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},toJSON:function(){if(!this._controlPoints)return null;for(var a=this._controlPoints.length,b=[],c=0;c<a;c++)b.push(this.controlPointToJSON(this._controlPoints[c]));return'{"controlPoints":['+b.join(",")+"]}"},calculateParts:function(){},calculateMidpoint:function(a,b){return new OpenLayers.Geometry.Point((a.x+b.x)/2,(a.y+b.y)/2)},calculateDistance:function(a,b){return Math.sqrt(Math.pow(a.x-b.x,2)+Math.pow(a.y-b.y,2))},toVector:function(a,b){return new OpenLayers.Geometry.Point(a.x-b.x,a.y-b.y)},calculateVector:function(a,b,c){b||(b=Math.PI/2);c||(c=1);var d,e,f,g,h;d=Math.sqrt(a.x*a.x+a.y*a.y);if(0==a.y)d=b=d*c*Math.cos(b)/a.x,0<a.x?(e=Math.sqrt(c*c-d*d),f=-e):0>a.x&&(f=Math.sqrt(c*c-d*d),e=-f),g=new OpenLayers.Geometry.Point(d,e),h=new OpenLayers.Geometry.Point(b,f);else{f=-a.x/a.y;var k=c*d*Math.cos(b)/a.y;b=1+f*f;e=2*f*k;c=k*k-c*c;d=(-e-Math.sqrt(e*e-4*b*c))/(2*b);b=(-e+Math.sqrt(e*e-4*b*c))/(2*b);e=f*d+k;f=f*b+k;0<=a.y?(g=new OpenLayers.Geometry.Point(d,e),h=new OpenLayers.Geometry.Point(b,f)):0>a.y&&(g=new OpenLayers.Geometry.Point(b,f),h=new OpenLayers.Geometry.Point(d,e))}return[g,h]},calculateIntersection:function(a,b,c,d){var e;0==a.y*b.x-a.x*b.y?0<a.x*b.x||0<a.y*b.y?(e=(c.x+d.x)/2,a=(c.y+d.y)/2):(e=d.x,a=d.y):(e=(a.x*b.x*(d.y-c.y)+c.x*a.y*b.x-d.x*b.y*a.x)/(a.y*b.x-a.x*b.y),a=0!=a.x?(e-c.x)*a.y/a.x+c.y:(e-d.x)*b.y/b.x+d.y);return new OpenLayers.Geometry.Point(e,a)},calculateAngularBisector:function(a,b){var c=Math.sqrt(a.x*a.x+a.y*a.y),d=Math.sqrt(b.x*b.x+b.y*b.y);return new OpenLayers.Geometry.Point(a.x/c+b.x/d,a.y/c+b.y/d)},calculateIntersectionFromTwoCorner:function(a,b,c,d){c||(c=Math.PI/4);var e=new OpenLayers.Geometry.Point(b.x-a.x,b.y-a.y),f=this.calculateVector(e,c,1);d=f[0];f=f[1];e=this.calculateVector(e,Math.PI-c,1);c=e[1];d=this.calculateIntersection(d,e[0],a,b);a=this.calculateIntersection(f,c,a,b);return[d,a]},cloneControlPoints:function(a){for(var b=[],c=0;c<a.length;c++)b.push(a[c].clone());return b},controlPointToJSON:function(a){return'{"x":  '+a.x+', "y": '+a.y+"}"},CLASS_NAME:"OpenLayers.Geometry.GeoLinePlotting"});OpenLayers.Geometry.GeoLinePlotting.getControlPointsFromJSON=function(a){var b=[];a=a.match(/{.*?}/g);for(var c=0,d=a.length;c<d;c++){var e=eval("("+a[c]+")");b.push(new OpenLayers.Geometry.Point(e.x,e.y))}return b};OpenLayers.Geometry.GeoMultiLinePlotting=OpenLayers.Class(OpenLayers.Geometry.MultiLineString,{_controlPoints:[],isMultiPlotting:!0,initialize:function(a){OpenLayers.Geometry.MultiLineString.prototype.initialize.apply(this,arguments);(this._controlPoints=a)&&0<a.length&&this.calculateParts()},getArea:function(){var a=0;if(this.components&&0<this.components.length)for(var a=a+Math.abs(this.components[0].getArea()),b=1,c=this.components.length;b<c;b++)a-=Math.abs(this.components[b].getArea());return a},getControlPoints:function(){return this._controlPoints},setControlPoint:function(a){a&&a.length&&0<a.length&&(this._controlPoints=a,this.calculateParts())},clone:function(){for(var a=new OpenLayers.Geometry.GeoMultiLinePlotting,b=[],c=[],d=0,e=this._controlPoints.length;d<e;d++)b.push(this._controlPoints[d].clone());a._controlPoints=b;for(b=0;b<this.components.length;b++)c.push(this.components[b].clone());a.components=c;return a},toJSON:function(){if(!this._controlPoints)return null;for(var a=this._controlPoints.length,b=[],c=0;c<a;c++)b.push(this.controlPointToJSON(this._controlPoints[c]));return'{"controlPoints":['+b.join(",")+"]}"},calculateParts:function(){},calculateMidpoint:function(a,b){return new OpenLayers.Geometry.Point((a.x+b.x)/2,(a.y+b.y)/2)},calculateArrowLines:function(a,b,c,d){var e=[];c||(c=10);d||(d=Math.PI/6);var f=this.calculateDistance(a,b);a=this.toVector(a,b);d=this.calculateVector(a,d,f/c);c=new OpenLayers.Geometry.Point(d[0].x+b.x,d[0].y+b.y);d=new OpenLayers.Geometry.Point(d[1].x+b.x,d[1].y+b.y);e.push(new OpenLayers.Geometry.LineString([b,c]));e.push(new OpenLayers.Geometry.LineString([b,d]));return e},calculateDistance:function(a,b){return Math.sqrt(Math.pow(a.x-b.x,2)+Math.pow(a.y-b.y,2))},toVector:function(a,b){return new OpenLayers.Geometry.Point(a.x-b.x,a.y-b.y)},calculateVector:function(a,b,c){b||(b=Math.PI/2);c||(c=1);var d,e,f,g,h;d=Math.sqrt(a.x*a.x+a.y*a.y);if(0==a.y)d=b=d*c*Math.cos(b)/a.x,0<a.x?(e=Math.sqrt(c*c-d*d),f=-e):0>a.x&&(f=Math.sqrt(c*c-d*d),e=-f),g=new OpenLayers.Geometry.Point(d,e),h=new OpenLayers.Geometry.Point(b,f);else{f=-a.x/a.y;var k=c*d*Math.cos(b)/a.y;b=1+f*f;e=2*f*k;c=k*k-c*c;d=(-e-Math.sqrt(e*e-4*b*c))/(2*b);b=(-e+Math.sqrt(e*e-4*b*c))/(2*b);e=f*d+k;f=f*b+k;0<=a.y?(g=new OpenLayers.Geometry.Point(d,e),h=new OpenLayers.Geometry.Point(b,f)):0>a.y&&(g=new OpenLayers.Geometry.Point(b,f),h=new OpenLayers.Geometry.Point(d,e))}return[g,h]},calculateIntersection:function(a,b,c,d){var e;0==a.y*b.x-a.x*b.y?0<a.x*b.x||0<a.y*b.y?(e=(c.x+d.x)/2,a=(c.y+d.y)/2):(e=d.x,a=d.y):(e=(a.x*b.x*(d.y-c.y)+c.x*a.y*b.x-d.x*b.y*a.x)/(a.y*b.x-a.x*b.y),a=0!=a.x?(e-c.x)*a.y/a.x+c.y:(e-d.x)*b.y/b.x+d.y);return new OpenLayers.Geometry.Point(e,a)},calculateAngularBisector:function(a,b){var c=Math.sqrt(a.x*a.x+a.y*a.y),d=Math.sqrt(b.x*b.x+b.y*b.y);return new OpenLayers.Geometry.Point(a.x/c+b.x/d,a.y/c+b.y/d)},calculateIntersectionFromTwoCorner:function(a,b,c,d){c||(c=Math.PI/4);var e=new OpenLayers.Geometry.Point(b.x-a.x,b.y-a.y),f=this.calculateVector(e,c,1);d=f[0];f=f[1];e=this.calculateVector(e,Math.PI-c,1);c=e[1];d=this.calculateIntersection(d,e[0],a,b);a=this.calculateIntersection(f,c,a,b);return[d,a]},cloneControlPoints:function(a){for(var b=[],c=0;c<a.length;c++)b.push(a[c].clone());return b},controlPointToJSON:function(a){return'{"x":  '+a.x+', "y": '+a.y+"}"},CLASS_NAME:"OpenLayers.Geometry.GeoMultiLinePlotting"});OpenLayers.Geometry.GeoMultiLinePlotting.getControlPointsFromJSON=function(a){var b=[];a=a.match(/{.*?}/g);for(var c=0,d=a.length;c<d;c++){var e=eval("("+a[c]+")");b.push(new OpenLayers.Geometry.Point(e.x,e.y))}return b};OpenLayers.Geometry.GeoPlotting=OpenLayers.Class(OpenLayers.Geometry.Polygon,{_controlPoints:[],initialize:function(a){OpenLayers.Geometry.Polygon.prototype.initialize.apply(this,arguments);(this._controlPoints=a)&&0<a.length&&this.calculateParts()},getControlPoints:function(){return this._controlPoints},setControlPoint:function(a){a&&a.length&&0<a.length&&(this._controlPoints=a,this.calculateParts())},clone:function(){for(var a=new OpenLayers.Geometry.GeoPlotting,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},toJSON:function(){if(!this._controlPoints)return null;for(var a=this._controlPoints.length,b=[],c=0;c<a;c++)b.push(this.controlPointToJSON(this._controlPoints[c]));return'{"controlPoints":['+b.join(",")+"]}"},calculateMidpoint:function(a,b){return new OpenLayers.Geometry.Point((a.x+b.x)/2,(a.y+b.y)/2)},calculateParts:function(){},calculateVector:function(a,b,c){b||(b=Math.PI/2);c||(c=1);var d,e,f,g,h;d=Math.sqrt(a.x*a.x+a.y*a.y);if(0==a.y)d=b=d*c*Math.cos(b)/a.x,0<a.x?(e=Math.sqrt(c*c-d*d),f=-e):0>a.x&&(f=Math.sqrt(c*c-d*d),e=-f),g=new OpenLayers.Geometry.Point(d,e),h=new OpenLayers.Geometry.Point(b,f);else{f=-a.x/a.y;var k=c*d*Math.cos(b)/a.y;b=1+f*f;e=2*f*k;c=k*k-c*c;d=(-e-Math.sqrt(e*e-4*b*c))/(2*b);b=(-e+Math.sqrt(e*e-4*b*c))/(2*b);e=f*d+k;f=f*b+k;0<=a.y?(g=new OpenLayers.Geometry.Point(d,e),h=new OpenLayers.Geometry.Point(b,f)):0>a.y&&(g=new OpenLayers.Geometry.Point(b,f),h=new OpenLayers.Geometry.Point(d,e))}return[g,h]},calculateIntersection:function(a,b,c,d){var e;0==a.y*b.x-a.x*b.y?0<a.x*b.x||0<a.y*b.y?(e=(c.x+d.x)/2,a=(c.y+d.y)/2):(e=d.x,a=d.y):(e=(a.x*b.x*(d.y-c.y)+c.x*a.y*b.x-d.x*b.y*a.x)/(a.y*b.x-a.x*b.y),a=0!=a.x?(e-c.x)*a.y/a.x+c.y:(e-d.x)*b.y/b.x+d.y);return new OpenLayers.Geometry.Point(e,a)},calculateAngularBisector:function(a,b){var c=Math.sqrt(a.x*a.x+a.y*a.y),d=Math.sqrt(b.x*b.x+b.y*b.y);return new OpenLayers.Geometry.Point(a.x/c+b.x/d,a.y/c+b.y/d)},calculateIntersectionFromTwoCorner:function(a,b,c,d){c||(c=Math.PI/4);var e=new OpenLayers.Geometry.Point(b.x-a.x,b.y-a.y),f=this.calculateVector(e,c,1);d=f[0];f=f[1];e=this.calculateVector(e,Math.PI-c,1);c=e[1];d=this.calculateIntersection(d,e[0],a,b);a=this.calculateIntersection(f,c,a,b);return[d,a]},calculateDistance:function(a,b){return Math.sqrt(Math.pow(a.x-b.x,2)+Math.pow(a.y-b.y,2))},calculateArc:function(a,b,c,d,e,f){if(!e||1!=e&&-1!=e)e=-1;f||(f=360);f=Math.PI/f/2;e*=f;d=Math.abs(d-c);for(var g=[],h=0;h<d;h+=f){var k=new OpenLayers.Geometry.Point(Math.cos(c)*b+a.x,Math.sin(c)*b+a.y);g.push(k);c+=e;c=0>c?c+2*Math.PI:c;c=c>2*Math.PI?c-2*Math.PI:c}return g},cloneControlPoints:function(a){for(var b=[],c=0;c<a.length;c++)b.push(a[c].clone());return b},controlPointToJSON:function(a){return'{"x":  '+a.x+', "y": '+a.y+"}"},CLASS_NAME:"OpenLayers.Geometry.GeoPlotting"});OpenLayers.Geometry.GeoPlotting.getControlPointsFromJSON=function(a){var b=[];a=a.match(/{.*?}/g);for(var c=0,d=a.length;c<d;c++){var e=eval("("+a[c]+")");b.push(new OpenLayers.Geometry.Point(e.x,e.y))}return b};OpenLayers.Geometry.GeoBezierCurveArrow=OpenLayers.Class(OpenLayers.Geometry.GeoMultiLinePlotting,{initialize:function(a){OpenLayers.Geometry.GeoMultiLinePlotting.prototype.initialize.apply(this,arguments)},toJSON:function(){return OpenLayers.Geometry.GeoMultiLinePlotting.prototype.toJSON.apply(this,arguments)},clone:function(){for(var a=new OpenLayers.Geometry.GeoBezierCurveArrow,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},calculateParts:function(){var a=this.cloneControlPoints(this._controlPoints),b=[];if(2==a.length){var c=a[0],d=a[1],a=new OpenLayers.Geometry.LineString([c,d]),c=this.calculateArrowLines(c,d,10);b.push(a,c[0],c[1])}else 3==a.length?(c=a[1],d=a[2],a=OpenLayers.Geometry.LineString.createBezier2(a),c=this.calculateArrowLines(c,d,10),b.push(a,c[0],c[1])):4==a.length?(c=a[2],d=a[3],a=OpenLayers.Geometry.LineString.createBezier3(a),c=this.calculateArrowLines(c,d,10),b.push(a,c[0],c[1])):4<a.length&&(c=a[a.length-2],d=a[a.length-1],a=OpenLayers.Geometry.LineString.createBezierN(a),c=this.calculateArrowLines(c,d,10),b.push(a,c[0],c[1]));this.components=b},CLASS_NAME:"OpenLayers.Geometry.GeoBezierCurveArrow"});OpenLayers.Geometry.GeoBezierCurveArrow.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoBezierCurveArrow;a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoLinePlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoCardinalCurveArrow=OpenLayers.Class(OpenLayers.Geometry.GeoMultiLinePlotting,{initialize:function(a){OpenLayers.Geometry.GeoMultiLinePlotting.prototype.initialize.apply(this,arguments)},toJSON:function(){return OpenLayers.Geometry.GeoMultiLinePlotting.prototype.toJSON.apply(this,arguments)},clone:function(){for(var a=new OpenLayers.Geometry.GeoCardinalCurveArrow,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},calculateParts:function(){var a=this.cloneControlPoints(this._controlPoints);this.components=[];var b=[];if(2==a.length){var c=a[0],d=a[1],a=new OpenLayers.Geometry.LineString([c,d]),c=this.calculateArrowLines(c,d,10);b.push(a,c[0],c[1]);this.components=b}else 2<a.length&&(d=OpenLayers.Geometry.LineString.calculateCardinalPoints(a),a=OpenLayers.Geometry.LineString.createBezierN(d),c=d[d.length-2],d=d[d.length-1],c=this.calculateArrowLines(c,d,2),b.push(a,c[0],c[1]),this.components=b)},CLASS_NAME:"OpenLayers.Geometry.GeoCardinalCurveArrow"});OpenLayers.Geometry.GeoCardinalCurveArrow.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoCardinalCurveArrow;a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoLinePlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoCurveFlag=OpenLayers.Class(OpenLayers.Geometry.GeoPlotting,{initialize:function(a){OpenLayers.Geometry.GeoPlotting.prototype.initialize.apply(this,arguments)},toJSON:function(){return OpenLayers.Geometry.GeoPlotting.prototype.toJSON.apply(this,arguments)},clone:function(){for(var a=new OpenLayers.Geometry.GeoCurveFlag,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},calculateParts:function(){var a=this.cloneControlPoints(this._controlPoints);this.components=[];if(1<a.length){var b=a[0],a=a[a.length-1],c=new OpenLayers.Geometry.Point((a.x-b.x)/4+b.x,(a.y-b.y)/8+b.y),d=new OpenLayers.Geometry.Point((b.x+a.x)/2,b.y),e=new OpenLayers.Geometry.Point(3*(a.x-b.x)/4+b.x,-(a.y-b.y)/8+b.y),f=new OpenLayers.Geometry.Point(a.x,b.y),g=new OpenLayers.Geometry.Point(a.x,(b.y+a.y)/2),h=new OpenLayers.Geometry.Point(3*(a.x-b.x)/4+b.x,3*(a.y-b.y)/8+b.y),k=new OpenLayers.Geometry.Point((b.x+a.x)/2,(b.y+a.y)/2),l=new OpenLayers.Geometry.Point((a.x-b.x)/4+b.x,5*(a.y-b.y)/8+b.y),m=new OpenLayers.Geometry.Point(b.x,(b.y+a.y)/2),a=new OpenLayers.Geometry.Point(b.x,a.y),b=OpenLayers.Geometry.LineString.createBezier2([b,c,d,e,f]).components,g=OpenLayers.Geometry.LineString.createBezier2([g,h,k,l,m]).components,b=b.concat(g);b.push(a);this.components.push(new OpenLayers.Geometry.LinearRing(b))}},CLASS_NAME:"OpenLayers.Geometry.GeoCurveFlag"});OpenLayers.Geometry.GeoCurveFlag.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoCurveFlag;a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoPlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoDiagonalArrow=OpenLayers.Class(OpenLayers.Geometry.GeoPlotting,{_ratio:6,initialize:function(a){OpenLayers.Geometry.GeoPlotting.prototype.initialize.apply(this,arguments)},getRatio:function(){return this._ratio},setRatio:function(a){a&&(this._ratio=a,this.calculateParts())},toJSON:function(){if(!this._controlPoints)return null;for(var a=this._controlPoints.length,b=[],c=0;c<a;c++)b.push(this.controlPointToJSON(this._controlPoints[c]));return'{"controlPoints":['+b.join(",")+'],"ratio":'+this._ratio+"}"},clone:function(){for(var a=new OpenLayers.Geometry.GeoDiagonalArrow,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._ratio=this._ratio;a._controlPoints=b;return a},calculateParts:function(){null==this._controlPoints||2>this._controlPoints.length||2==this._controlPoints.length&&this._controlPoints[0].equals(this._controlPoints[1])||(this.components=[],2==this._controlPoints.length?this.calculateTwoPoints():this.calculateMorePoints())},calculateTwoPoints:function(){var a=this.cloneControlPoints(this._controlPoints),b=a[0],a=a[1],c=Math.sqrt((a.y-b.y)*(a.y-b.y)+(a.x-b.x)*(a.x-b.x))/this._ratio,d=b.x+(a.x-b.x)*(this._ratio-1)/this._ratio,e=b.y+(a.y-b.y)*(this._ratio-1)/this._ratio;new OpenLayers.Geometry.Point(d,e);var c=this.calculateVector(new OpenLayers.Geometry.Point(a.x-b.x,a.y-b.y),Math.PI/2,c/2),f=c[0],g=c[1],c=new OpenLayers.Geometry.Point(f.x+b.x,f.y+b.y),b=new OpenLayers.Geometry.Point(g.x+b.x,g.y+b.y),f=new OpenLayers.Geometry.Point(f.x/this._ratio+d,f.y/this._ratio+e),d=new OpenLayers.Geometry.Point(g.x/this._ratio+d,g.y/this._ratio+e),e=new OpenLayers.Geometry.Point(2*f.x-d.x,2*f.y-d.y),g=new OpenLayers.Geometry.Point(2*d.x-f.x,2*d.y-f.y);this.components.push(new OpenLayers.Geometry.LinearRing([c,f,e,a,g,d,b]))},calculateMorePoints:function(){for(var a=this.cloneControlPoints(this._controlPoints),b=0,c=0,c=0;c<a.length-1;c++)var d=a[c],e=a[c+1],b=b+Math.sqrt((e.y-d.y)*(e.y-d.y)+(e.x-d.x)*(e.x-d.x));for(var c=b/this._ratio,f=Math.atan(c/(2*b)),e=[],b=[],g=new OpenLayers.Geometry.Point,d=new OpenLayers.Geometry.Point,h=0;h<a.length-2;h++){var k=a[h],l=a[h+1],m=a[h+2],p=new OpenLayers.Geometry.Point(l.x-k.x,l.y-k.y),n=new OpenLayers.Geometry.Point(m.x-l.x,m.y-l.y),m=new OpenLayers.Geometry.Point,q=new OpenLayers.Geometry.Point;0==h?(d=this.calculateVector(p,Math.PI/2,c/2),g=d[0],d=d[1],g=m=new OpenLayers.Geometry.Point(g.x+k.x,g.y+k.y),d=q=new OpenLayers.Geometry.Point(d.x+k.x,d.y+k.y)):(m=e[e.length-1],q=b[b.length-1]);var r=this.calculateVector(p,f,1),k=r[1],r=r[0],p=this.calculateAngularBisector(new OpenLayers.Geometry.Point(-p.x,-p.y),n),n=this.calculateIntersection(k,p,m,l),l=this.calculateIntersection(r,p,q,l);e.push(new OpenLayers.Geometry.Point((m.x+n.x)/2,(m.y+n.y)/2));e.push(n);b.push(new OpenLayers.Geometry.Point((q.x+l.x)/2,(q.y+l.y)/2));b.push(l)}l=a[a.length-2];a=a[a.length-1];m=Math.sqrt((l.x-a.x)*(l.x-a.x)+(l.y-a.y)*(l.y-a.y));f=new OpenLayers.Geometry.Point;n=new OpenLayers.Geometry.Point;n=[];p=new OpenLayers.Geometry.Point;h=new OpenLayers.Geometry.Point;q=new OpenLayers.Geometry.Point;k=new OpenLayers.Geometry.Point;p=e[e.length-1];h=b[b.length-1];f=new OpenLayers.Geometry.Point;n=new OpenLayers.Geometry.Point;m<=c||(f=new OpenLayers.Geometry.Point(a.x-l.x,a.y-l.y),l=Math.sqrt(f.x*f.x+f.y*f.y),l=new OpenLayers.Geometry.Point(a.x-f.x*c/l,a.y-f.y*c/l));n=this.calculateVector(new OpenLayers.Geometry.Point(a.x-l.x,a.y-l.y),Math.PI/2,c/2);f=n[0];n=n[1];f=new OpenLayers.Geometry.Point(f.x/this._ratio+l.x,f.y/this._ratio+l.y);n=new OpenLayers.Geometry.Point(n.x/this._ratio+l.x,n.y/this._ratio+l.y);q=new OpenLayers.Geometry.Point(2*f.x-n.x,2*f.y-n.y);k=new OpenLayers.Geometry.Point(2*n.x-f.x,2*n.y-f.y);p=new OpenLayers.Geometry.Point((p.x+f.x)/2,(p.y+f.y)/2);h=new OpenLayers.Geometry.Point((h.x+n.x)/2,(h.y+n.y)/2);e.push(p);b.push(h);c=OpenLayers.Geometry.LineString.createBezier2(e).components;b=OpenLayers.Geometry.LineString.createBezier2(b).components;e=[g];e=e.concat(c);e.push(f);e.push(q);e.push(a);e.push(k);e.push(n);for(c=b.length-1;0<=c;c--)e.push(b[c]);e.push(d);this.components.push(new OpenLayers.Geometry.LinearRing(e))},CLASS_NAME:"OpenLayers.Geometry.GeoDiagonalArrow"});OpenLayers.Geometry.GeoDiagonalArrow.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoDiagonalArrow,c=a.match(/"ratio":([0-9]+)/)[1];b._ratio=parseInt(c);a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoPlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoDoubleArrow=OpenLayers.Class(OpenLayers.Geometry.GeoPlotting,{initialize:function(a){OpenLayers.Geometry.GeoPlotting.prototype.initialize.apply(this,arguments)},toJSON:function(){return OpenLayers.Geometry.GeoPlotting.prototype.toJSON.apply(this,arguments)},clone:function(){for(var a=new OpenLayers.Geometry.GeoDoubleArrow,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},calculateParts:function(){if(!(null==this._controlPoints||4>this._controlPoints.length)){var a=this.cloneControlPoints(this._controlPoints),b=a[0],c=a[1],d=a[2],a=a[3],e=new OpenLayers.Geometry.Point((5*(b.x+c.x)+(d.x+a.x))/12,(5*(b.y+c.y)+(d.y+a.y))/12),f=this.calculateIntersectionFromTwoCorner(b,a,Math.PI/8,Math.PI/6)[0],g=this.calculateIntersectionFromTwoCorner(e,a,Math.PI/8,Math.PI/16)[0],h=this.calculateIntersectionFromTwoCorner(c,d,Math.PI/8,Math.PI/6)[1],k=this.calculateIntersectionFromTwoCorner(e,d,Math.PI/8,Math.PI/16)[1],l=new OpenLayers.Geometry.Point(f.x-a.x,f.y-a.y),m=Math.sqrt(l.x*l.x+l.y*l.y),l=new OpenLayers.Geometry.Point(l.x/m,l.y/m),p=new OpenLayers.Geometry.Point(g.x-a.x,g.y-a.y),n=Math.sqrt(p.x*p.x+p.y*p.y),p=new OpenLayers.Geometry.Point(p.x/n,p.y/n),m=m<n?.25*m:.25*n,q=new OpenLayers.Geometry.Point(l.x*m+a.x,l.y*m+a.y),p=new OpenLayers.Geometry.Point(p.x*m+a.x,p.y*m+a.y),m=new OpenLayers.Geometry.Point(1.5*q.x-.5*p.x,1.5*q.y-.5*p.y),l=new OpenLayers.Geometry.Point(1.5*p.x-.5*q.x,1.5*p.y-.5*q.y),r=new OpenLayers.Geometry.Point(h.x-d.x,h.y-d.y),n=Math.sqrt(r.x*r.x+r.y*r.y),r=new OpenLayers.Geometry.Point(r.x/n,r.y/n),t=new OpenLayers.Geometry.Point(k.x-d.x,k.y-d.y),u=Math.sqrt(t.x*t.x+t.y*t.y),t=new OpenLayers.Geometry.Point(t.x/u,t.y/u),u=n<u?.25*n:.25*u,n=new OpenLayers.Geometry.Point(r.x*u+d.x,r.y*u+d.y),u=new OpenLayers.Geometry.Point(t.x*u+d.x,t.y*u+d.y),r=new OpenLayers.Geometry.Point(1.5*n.x-.5*u.x,1.5*n.y-.5*u.y),t=new OpenLayers.Geometry.Point(1.5*u.x-.5*n.x,1.5*u.y-.5*n.y),b=OpenLayers.Geometry.LineString.createBezier2([b,f,q]).components,q=new OpenLayers.Geometry.Point(d.x-a.x,d.y-a.y),f=new OpenLayers.Geometry.Point(e.x-a.x,e.y-a.y),f=Math.sqrt(f.x*f.x+f.y*f.y),v=new OpenLayers.Geometry.Point(e.x-d.x,e.y-d.y),v=Math.sqrt(v.x*v.x+v.y*v.y),w=new OpenLayers.Geometry.Point(.4*q.x,.4*q.y),q=new OpenLayers.Geometry.Point(w.x*f/(f+v),w.y*f/(f+v)),f=new OpenLayers.Geometry.Point(w.x*v/(f+v),w.y*v/(f+v)),q=new OpenLayers.Geometry.Point(e.x-q.x,e.y-q.y),f=new OpenLayers.Geometry.Point(e.x+f.x,e.y+f.y),e=OpenLayers.Geometry.LineString.createBezier1([p,g,q,e,f,k,u],0,20).components,c=OpenLayers.Geometry.LineString.createBezier2([n,h,c]).components,h=b;h.push(m);h.push(a);h.push(l);h=h.concat(e);h.push(t);h.push(d);h.push(r);h=h.concat(c);this.components=[];this.components.push(new OpenLayers.Geometry.LinearRing(h))}},CLASS_NAME:"OpenLayers.Geometry.GeoDoubleArrow"});OpenLayers.Geometry.GeoDoubleArrow.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoDoubleArrow;a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoPlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoDoveTailDiagonalArrow=OpenLayers.Class(OpenLayers.Geometry.GeoPlotting,{_ratio:6,_tailRatio:5,initialize:function(a){OpenLayers.Geometry.GeoPlotting.prototype.initialize.apply(this,arguments)},getRatio:function(){return this._ratio},setRatio:function(a){a&&(this._ratio=a,this.calculateParts())},toJSON:function(){if(!this._controlPoints)return null;for(var a=this._controlPoints.length,b=[],c=0;c<a;c++)b.push(this.controlPointToJSON(this._controlPoints[c]));return'{"controlPoints":['+b.join(",")+'],"ratio":'+this._ratio+"}"},clone:function(){for(var a=new OpenLayers.Geometry.GeoDoveTailDiagonalArrow,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._ratio=this._ratio;a._controlPoints=b;return a},calculateParts:function(){null==this._controlPoints||2>this._controlPoints.length||2==this._controlPoints.length&&this._controlPoints[0].equals(this._controlPoints[1])||(this.components=[],2==this._controlPoints.length?this.calculateTwoPoints():this.calculateMorePoints())},calculateTwoPoints:function(){var a=this.cloneControlPoints(this._controlPoints),b=a[0],a=a[1],c=Math.sqrt((a.y-b.y)*(a.y-b.y)+(a.x-b.x)*(a.x-b.x))/this._ratio,d=b.x+(a.x-b.x)*(this._ratio-1)/this._ratio,e=b.y+(a.y-b.y)*(this._ratio-1)/this._ratio;new OpenLayers.Geometry.Point(d,e);var c=this.calculateVector(new OpenLayers.Geometry.Point(a.x-b.x,a.y-b.y),Math.PI/2,c/2),f=c[0],g=c[1],c=new OpenLayers.Geometry.Point(f.x+b.x,f.y+b.y),h=new OpenLayers.Geometry.Point(g.x+b.x,g.y+b.y),b=new OpenLayers.Geometry.Point((a.x-b.x)/this._tailRatio+b.x,(a.y-b.y)/this._tailRatio+b.y),f=new OpenLayers.Geometry.Point(f.x/this._ratio+d,f.y/this._ratio+e),d=new OpenLayers.Geometry.Point(g.x/this._ratio+d,g.y/this._ratio+e),e=new OpenLayers.Geometry.Point(2*f.x-d.x,2*f.y-d.y),g=new OpenLayers.Geometry.Point(2*d.x-f.x,2*d.y-f.y);this.components.push(new OpenLayers.Geometry.LinearRing([b,c,f,e,a,g,d,h]))},calculateMorePoints:function(){for(var a=this.cloneControlPoints(this._controlPoints),b=0,c=0,d,c=0;c<a.length-1;c++){var e=a[c],f=a[c+1],b=b+Math.sqrt((f.y-e.y)*(f.y-e.y)+(f.x-e.x)*(f.x-e.x));0==c&&(d=new OpenLayers.Geometry.Point((f.x-e.x)/this._tailRatio+e.x,(f.y-e.y)/this._tailRatio+e.y))}for(var c=b/this._ratio,g=Math.atan(c/(2*b)),f=[],b=[],h=new OpenLayers.Geometry.Point,e=new OpenLayers.Geometry.Point,k=0;k<a.length-2;k++){var l=a[k],m=a[k+1],p=a[k+2],n=new OpenLayers.Geometry.Point(m.x-l.x,m.y-l.y),q=new OpenLayers.Geometry.Point(p.x-m.x,p.y-m.y),p=new OpenLayers.Geometry.Point,r=new OpenLayers.Geometry.Point;0==k?(e=this.calculateVector(n,Math.PI/2,c/2),h=e[0],e=e[1],h=p=new OpenLayers.Geometry.Point(h.x+l.x,h.y+l.y),e=r=new OpenLayers.Geometry.Point(e.x+l.x,e.y+l.y)):(p=f[f.length-1],r=b[b.length-1]);var t=this.calculateVector(n,g,1),l=t[1],t=t[0],n=this.calculateAngularBisector(new OpenLayers.Geometry.Point(-n.x,-n.y),q),q=this.calculateIntersection(l,n,p,m),m=this.calculateIntersection(t,n,r,m);f.push(new OpenLayers.Geometry.Point((p.x+q.x)/2,(p.y+q.y)/2));f.push(q);b.push(new OpenLayers.Geometry.Point((r.x+m.x)/2,(r.y+m.y)/2));b.push(m)}m=a[a.length-2];a=a[a.length-1];p=Math.sqrt((m.x-a.x)*(m.x-a.x)+(m.y-a.y)*(m.y-a.y));g=new OpenLayers.Geometry.Point;q=new OpenLayers.Geometry.Point;q=[];n=new OpenLayers.Geometry.Point;k=new OpenLayers.Geometry.Point;r=new OpenLayers.Geometry.Point;l=new OpenLayers.Geometry.Point;n=f[f.length-1];k=b[b.length-1];g=new OpenLayers.Geometry.Point;q=new OpenLayers.Geometry.Point;p<=c||(g=new OpenLayers.Geometry.Point(a.x-m.x,a.y-m.y),m=Math.sqrt(g.x*g.x+g.y*g.y),m=new OpenLayers.Geometry.Point(a.x-g.x*c/m,a.y-g.y*c/m));q=this.calculateVector(new OpenLayers.Geometry.Point(a.x-m.x,a.y-m.y),Math.PI/2,c/2);g=q[0];q=q[1];g=new OpenLayers.Geometry.Point(g.x/this._ratio+m.x,g.y/this._ratio+m.y);q=new OpenLayers.Geometry.Point(q.x/this._ratio+m.x,q.y/this._ratio+m.y);r=new OpenLayers.Geometry.Point(2*g.x-q.x,2*g.y-q.y);l=new OpenLayers.Geometry.Point(2*q.x-g.x,2*q.y-g.y);n=new OpenLayers.Geometry.Point((n.x+g.x)/2,(n.y+g.y)/2);k=new OpenLayers.Geometry.Point((k.x+q.x)/2,(k.y+q.y)/2);f.push(n);b.push(k);c=OpenLayers.Geometry.LineString.createBezier2(f).components;b=OpenLayers.Geometry.LineString.createBezier2(b).components;f=[h];f=f.concat(c);f.push(g);f.push(r);f.push(a);f.push(l);f.push(q);for(c=b.length-1;0<=c;c--)f.push(b[c]);f.push(e);f.push(d);this.components.push(new OpenLayers.Geometry.LinearRing(f))},CLASS_NAME:"OpenLayers.Geometry.GeoDoveTailDiagonalArrow"});OpenLayers.Geometry.GeoDoveTailDiagonalArrow.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoDoveTailDiagonalArrow,c=a.match(/"ratio":([0-9]+)/)[1];b._ratio=parseInt(c);a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoPlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoDoveTailStraightArrow=OpenLayers.Class(OpenLayers.Geometry.GeoPlotting,{_ratio:6,_tailRatio:5,initialize:function(a){OpenLayers.Geometry.GeoPlotting.prototype.initialize.apply(this,arguments)},getRatio:function(){return this._ratio},setRatio:function(a){a&&(this._ratio=a,this.calculateParts())},clone:function(){for(var a=new OpenLayers.Geometry.GeoDoveTailStraightArrow,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._ratio=this._ratio;a._controlPoints=b;return a},toJSON:function(){if(!this._controlPoints)return null;for(var a=this._controlPoints.length,b=[],c=0;c<a;c++)b.push(this.controlPointToJSON(this._controlPoints[c]));return'{"controlPoints":['+b.join(",")+'],"ratio":'+this._ratio+"}"},calculateParts:function(){null==this._controlPoints||2>this._controlPoints.length||2==this._controlPoints.length&&this._controlPoints[0].equals(this._controlPoints[1])||(this.components=[],2==this._controlPoints.length?this.calculateTwoPoints():this.calculateMorePoints())},calculateTwoPoints:function(){var a=this.cloneControlPoints(this._controlPoints),b=a[0],a=a[1],c=Math.sqrt((a.y-b.y)*(a.y-b.y)+(a.x-b.x)*(a.x-b.x))/this._ratio,d=b.x+(a.x-b.x)*(this._ratio-1)/this._ratio,e=b.y+(a.y-b.y)*(this._ratio-1)/this._ratio,f=this.calculateVector(new OpenLayers.Geometry.Point(a.x-b.x,a.y-b.y),Math.PI/2,c/2),c=f[0],g=f[1],c=new OpenLayers.Geometry.Point(b.x+c.x,b.y+c.y),f=new OpenLayers.Geometry.Point(d+c.x-b.x,e+c.y-b.y),h=new OpenLayers.Geometry.Point(2*f.x-d,2*f.y-e),k=new OpenLayers.Geometry.Point(a.x,a.y),g=new OpenLayers.Geometry.Point(b.x+g.x,b.y+g.y),l=new OpenLayers.Geometry.Point(d+g.x-b.x,e+g.y-b.y),d=new OpenLayers.Geometry.Point(2*l.x-d,2*l.y-e),b=new OpenLayers.Geometry.Point((a.x-b.x)/this._tailRatio+b.x,(a.y-b.y)/this._tailRatio+b.y);this.components.push(new OpenLayers.Geometry.LinearRing([b,c,f,h,k,d,l,g]))},calculateMorePoints:function(){for(var a=this.cloneControlPoints(this._controlPoints),b=0,c=0,d,e=0;e<a.length-1;e++){var f=a[e],g=a[e+1],b=b+Math.sqrt((g.y-f.y)*(g.y-f.y)+(g.x-f.x)*(g.x-f.x));0==e&&(d=new OpenLayers.Geometry.Point((g.x-f.x)/this._tailRatio+f.x,(g.y-f.y)/this._tailRatio+f.y))}for(var c=b/this._ratio,g=[],f=[],e=OpenLayers.Geometry.Point(),b=OpenLayers.Geometry.Point(),h=0;h<a.length-2;h++){var k=a[h],l=a[h+1],m=a[h+2],p=new OpenLayers.Geometry.Point(l.x-k.x,l.y-k.y),m=new OpenLayers.Geometry.Point(m.x-l.x,m.y-l.y),n=this.calculateVector(p,Math.PI/2,c/2),q=n[0],r=n[1],t=this.calculateVector(m,Math.PI/2,c/2),n=t[0],t=t[1],q=new OpenLayers.Geometry.Point(k.x+q.x,k.y+q.y),k=new OpenLayers.Geometry.Point(k.x+r.x,k.y+r.y),n=new OpenLayers.Geometry.Point(l.x+n.x,l.y+n.y),t=new OpenLayers.Geometry.Point(l.x+t.x,l.y+t.y),l=this.calculateIntersection(p,m,q,n),p=this.calculateIntersection(p,m,k,t);0==h?(e=q,b=k,m=new OpenLayers.Geometry.Point((e.x+l.x)/2,(e.y+l.y)/2),q=new OpenLayers.Geometry.Point((b.x+p.x)/2,(b.y+p.y)/2)):(m=g[g.length-1],q=f[f.length-1],m=new OpenLayers.Geometry.Point((m.x+l.x)/2,(m.y+l.y)/2),q=new OpenLayers.Geometry.Point((q.x+p.x)/2,(q.y+p.y)/2));g.push(m);f.push(q);g.push(l);f.push(p)}h=a[a.length-2];a=a[a.length-1];p=new OpenLayers.Geometry.Point(a.x-h.x,a.y-h.y);q=Math.sqrt(p.x*p.x+p.y*p.y);n=[];k=OpenLayers.Geometry.Point();n=OpenLayers.Geometry.Point();l=OpenLayers.Geometry.Point();m=OpenLayers.Geometry.Point();m=OpenLayers.Geometry.Point();l=OpenLayers.Geometry.Point();l=g[g.length-1];m=f[f.length-1];q<=c||(h=new OpenLayers.Geometry.Point(a.x-h.x,a.y-h.y),q=Math.sqrt(h.x*h.x+h.y*h.y),h=new OpenLayers.Geometry.Point(a.x-h.x*c/q,a.y-h.y*c/q));n=this.calculateVector(p,Math.PI/2,c/2);k=n[0];n=n[1];c=new OpenLayers.Geometry.Point(h.x+k.x,h.y+k.y);p=new OpenLayers.Geometry.Point(h.x+n.x,h.y+n.y);l=new OpenLayers.Geometry.Point((l.x+c.x)/2,(l.y+c.y)/2);m=new OpenLayers.Geometry.Point((m.x+p.x)/2,(m.y+p.y)/2);g.push(l);f.push(m);m=new OpenLayers.Geometry.Point(2*c.x-h.x,2*c.y-h.y);l=new OpenLayers.Geometry.Point(2*p.x-h.x,2*p.y-h.y);g=OpenLayers.Geometry.LineString.createBezier2(g).components;f=OpenLayers.Geometry.LineString.createBezier2(f).components;e=[e];e=e.concat(g);e.push(c);e.push(m);e.push(a);e.push(l);e.push(p);e=e.concat(f.reverse());e.push(b);e.push(d);this.components.push(new OpenLayers.Geometry.LinearRing(e))},CLASS_NAME:"OpenLayers.Geometry.GeoDoveTailStraightArrow"});OpenLayers.Geometry.GeoDoveTailStraightArrow.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoDoveTailStraightArrow,c=a.match(/"ratio":([0-9]+)/)[1];b._ratio=parseInt(c);a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoPlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoParallelSearch=OpenLayers.Class(OpenLayers.Geometry.GeoMultiLinePlotting,{initialize:function(a){OpenLayers.Geometry.GeoMultiLinePlotting.prototype.initialize.apply(this,arguments)},toJSON:function(){return OpenLayers.Geometry.GeoMultiLinePlotting.prototype.toJSON.apply(this,arguments)},clone:function(){for(var a=new OpenLayers.Geometry.GeoParallelSearch,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},calculateParts:function(){var a=this.cloneControlPoints(this._controlPoints);this.components=[];1<a.length&&this.components.push(new OpenLayers.Geometry.LineString(a));if(2<a.length){var b=a[0],c=this.toVector(b,a[1]),d=this.calculateVector(c)[0],e=!1,f=[];f.push(b);for(var b=[],g=1;g<a.length;g++){var e=0!==g%2,h=a[g];e?(e=f[g-1].clone(),h=this.calculateIntersection(d,c,h,e)):(e=f[g-1],h=this.calculateIntersection(c,d,h,e));f.push(h);e=this.calculateArrowLines(e,h,15);b.push(e[0]);b.push(e[1]);b.unshift(new OpenLayers.Geometry.LineString(f))}this.components=b}},CLASS_NAME:"OpenLayers.Geometry.GeoParallelSearch"});OpenLayers.Geometry.GeoParallelSearch.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoParallelSearch;a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoLinePlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoPolylineArrow=OpenLayers.Class(OpenLayers.Geometry.GeoMultiLinePlotting,{initialize:function(a){OpenLayers.Geometry.GeoMultiLinePlotting.prototype.initialize.apply(this,arguments)},toJSON:function(){return OpenLayers.Geometry.GeoMultiLinePlotting.prototype.toJSON.apply(this,arguments)},clone:function(){for(var a=new OpenLayers.Geometry.GeoPolylineArrow,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},calculateParts:function(){var a=this.cloneControlPoints(this._controlPoints);this.components=[];if(1<a.length){var b=[],c=a[a.length-2],d=a[a.length-1],a=new OpenLayers.Geometry.LineString(a),c=this.calculateArrowLines(c,d,10);b.push(a,c[0],c[1]);this.components=b}},CLASS_NAME:"OpenLayers.Geometry.GeoPolylineArrow"});OpenLayers.Geometry.GeoPolylineArrow.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoPolylineArrow;a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoLinePlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoRectFlag=OpenLayers.Class(OpenLayers.Geometry.GeoPlotting,{initialize:function(a){OpenLayers.Geometry.GeoPlotting.prototype.initialize.apply(this,arguments)},toJSON:function(){return OpenLayers.Geometry.GeoPlotting.prototype.toJSON.apply(this,arguments)},clone:function(){for(var a=new OpenLayers.Geometry.GeoRectFlag,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},calculateParts:function(){this.components=[];if(1<this._controlPoints.length){var a=this._controlPoints[0],b=this._controlPoints[this._controlPoints.length-1],c=a.clone(),d=new OpenLayers.Geometry.Point(b.x,a.y),e=new OpenLayers.Geometry.Point(b.x,(a.y+b.y)/2),f=new OpenLayers.Geometry.Point(a.x,(a.y+b.y)/2),a=new OpenLayers.Geometry.Point(a.x,b.y);this.components.push(new OpenLayers.Geometry.LinearRing([c,d,e,f,a]))}},CLASS_NAME:"OpenLayers.Geometry.GeoRectFlag"});OpenLayers.Geometry.GeoRectFlag.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoRectFlag;a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoPlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoSectorSearch=OpenLayers.Class(OpenLayers.Geometry.GeoMultiLinePlotting,{initialize:function(a){OpenLayers.Geometry.GeoMultiLinePlotting.prototype.initialize.apply(this,arguments)},toJSON:function(){return OpenLayers.Geometry.GeoMultiLinePlotting.prototype.toJSON.apply(this,arguments)},clone:function(){for(var a=new OpenLayers.Geometry.GeoSectorSearch,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},calculateParts:function(){var a=this.cloneControlPoints(this._controlPoints);this.components=[];if(1<a.length){var b=[],c=a[0],d=2*c.x,e=2*c.y,a=a[a.length-1],f=this.calculateDistance(c,a),g=this.toVector(c,a),g=this.calculateVector(g,4*Math.PI/3,f),f=g[0],h=new OpenLayers.Geometry.Point(f.x+c.x,f.y+c.y),f=new OpenLayers.Geometry.Point(-h.x+d,-h.y+e),g=g[1],k=new OpenLayers.Geometry.Point(g.x+c.x,g.y+c.y),g=new OpenLayers.Geometry.Point(-k.x+d,-k.y+e),e=new OpenLayers.Geometry.Point(-a.x+d,-a.y+e);b.push(new OpenLayers.Geometry.LineString([c,a,h,f,k,g,e,c]));d=this.calculateArrowLines(c,a);a=this.calculateArrowLines(a,h);h=this.calculateArrowLines(h,f);f=this.calculateArrowLines(f,k);k=this.calculateArrowLines(k,g);g=this.calculateArrowLines(g,e);c=this.calculateArrowLines(e,c);b.push(d[0],d[1]);b.push(a[0],a[1]);b.push(h[0],h[1]);b.push(f[0],f[1]);b.push(k[0],k[1]);b.push(g[0],g[1]);b.push(c[0],c[1]);this.components=b}},CLASS_NAME:"OpenLayers.Geometry.GeoSectorSearch"});OpenLayers.Geometry.GeoSectorSearch.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoSectorSearch;a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoLinePlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoStraightArrow=OpenLayers.Class(OpenLayers.Geometry.GeoPlotting,{_ratio:6,initialize:function(a){OpenLayers.Geometry.GeoPlotting.prototype.initialize.apply(this,arguments)},getRatio:function(){return this._ratio},setRatio:function(a){a&&(this._ratio=a,this.calculateParts())},clone:function(){for(var a=new OpenLayers.Geometry.GeoStraightArrow,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._ratio=this._ratio;a._controlPoints=b;return a},toJSON:function(){if(!this._controlPoints)return null;for(var a=this._controlPoints.length,b=[],c=0;c<a;c++)b.push(this.controlPointToJSON(this._controlPoints[c]));return'{"controlPoints":['+b.join(",")+'],"ratio":'+this._ratio+"}"},calculateParts:function(){null==this._controlPoints||2>this._controlPoints.length||2==this._controlPoints.length&&this._controlPoints[0].equals(this._controlPoints[1])||(this.components=[],2==this._controlPoints.length?this.calculateTwoPoints():this.calculateMorePoints())},calculateTwoPoints:function(){var a=this.cloneControlPoints(this._controlPoints),b=a[0],c=a[1],d=Math.sqrt((c.y-b.y)*(c.y-b.y)+(c.x-b.x)*(c.x-b.x))/this._ratio,a=b.x+(c.x-b.x)*(this._ratio-1)/this._ratio,e=b.y+(c.y-b.y)*(this._ratio-1)/this._ratio,f=this.calculateVector(new OpenLayers.Geometry.Point(c.x-b.x,c.y-b.y),Math.PI/2,d/2),d=f[0],g=f[1],d=new OpenLayers.Geometry.Point(b.x+d.x,b.y+d.y),f=new OpenLayers.Geometry.Point(a+d.x-b.x,e+d.y-b.y),h=new OpenLayers.Geometry.Point(2*f.x-a,2*f.y-e),c=new OpenLayers.Geometry.Point(c.x,c.y),g=new OpenLayers.Geometry.Point(b.x+g.x,b.y+g.y),b=new OpenLayers.Geometry.Point(a+g.x-b.x,e+g.y-b.y),a=new OpenLayers.Geometry.Point(2*b.x-a,2*b.y-e);this.components.push(new OpenLayers.Geometry.LinearRing([d,f,h,c,a,b,g]))},calculateMorePoints:function(){for(var a=this.cloneControlPoints(this._controlPoints),b=0,c=0,d=0;d<a.length-1;d++)var e=a[d],f=a[d+1],b=b+Math.sqrt((f.y-e.y)*(f.y-e.y)+(f.x-e.x)*(f.x-e.x));for(var c=b/this._ratio,f=[],e=[],d=OpenLayers.Geometry.Point(),b=OpenLayers.Geometry.Point(),g=0;g<a.length-2;g++){var h=a[g],k=a[g+1],l=a[g+2],m=new OpenLayers.Geometry.Point(k.x-h.x,k.y-h.y),l=new OpenLayers.Geometry.Point(l.x-k.x,l.y-k.y),p=this.calculateVector(m,Math.PI/2,c/2),n=p[0],q=p[1],r=this.calculateVector(l,Math.PI/2,c/2),p=r[0],r=r[1],n=new OpenLayers.Geometry.Point(h.x+n.x,h.y+n.y),h=new OpenLayers.Geometry.Point(h.x+q.x,h.y+q.y),p=new OpenLayers.Geometry.Point(k.x+p.x,k.y+p.y),r=new OpenLayers.Geometry.Point(k.x+r.x,k.y+r.y),k=this.calculateIntersection(m,l,n,p),m=this.calculateIntersection(m,l,h,r);0==g?(d=n,b=h,l=new OpenLayers.Geometry.Point((d.x+k.x)/2,(d.y+k.y)/2),n=new OpenLayers.Geometry.Point((b.x+m.x)/2,(b.y+m.y)/2)):(l=f[f.length-1],n=e[e.length-1],l=new OpenLayers.Geometry.Point((l.x+k.x)/2,(l.y+k.y)/2),n=new OpenLayers.Geometry.Point((n.x+m.x)/2,(n.y+m.y)/2));f.push(l);e.push(n);f.push(k);e.push(m)}g=a[a.length-2];a=a[a.length-1];m=new OpenLayers.Geometry.Point(a.x-g.x,a.y-g.y);n=Math.sqrt(m.x*m.x+m.y*m.y);p=[];h=OpenLayers.Geometry.Point();p=OpenLayers.Geometry.Point();k=OpenLayers.Geometry.Point();l=OpenLayers.Geometry.Point();l=OpenLayers.Geometry.Point();k=OpenLayers.Geometry.Point();k=f[f.length-1];l=e[e.length-1];n<=c||(g=new OpenLayers.Geometry.Point(a.x-g.x,a.y-g.y),n=Math.sqrt(g.x*g.x+g.y*g.y),g=new OpenLayers.Geometry.Point(a.x-g.x*c/n,a.y-g.y*c/n));p=this.calculateVector(m,Math.PI/2,c/2);h=p[0];p=p[1];c=new OpenLayers.Geometry.Point(g.x+h.x,g.y+h.y);m=new OpenLayers.Geometry.Point(g.x+p.x,g.y+p.y);k=new OpenLayers.Geometry.Point((k.x+c.x)/2,(k.y+c.y)/2);l=new OpenLayers.Geometry.Point((l.x+m.x)/2,(l.y+m.y)/2);f.push(k);e.push(l);l=new OpenLayers.Geometry.Point(2*c.x-g.x,2*c.y-g.y);k=new OpenLayers.Geometry.Point(2*m.x-g.x,2*m.y-g.y);f=OpenLayers.Geometry.LineString.createBezier2(f).components;e=OpenLayers.Geometry.LineString.createBezier2(e).components;d=[d];d=d.concat(f);d.push(c);d.push(l);d.push(a);d.push(k);d.push(m);d=d.concat(e.reverse());d.push(b);this.components.push(new OpenLayers.Geometry.LinearRing(d))},CLASS_NAME:"OpenLayers.Geometry.GeoStraightArrow"});OpenLayers.Geometry.GeoStraightArrow.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoStraightArrow,c=a.match(/"ratio":([0-9]+)/)[1];b._ratio=parseInt(c);a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoPlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoTriangleFlag=OpenLayers.Class(OpenLayers.Geometry.GeoPlotting,{initialize:function(a){OpenLayers.Geometry.GeoPlotting.prototype.initialize.apply(this,arguments)},toJSON:function(){return OpenLayers.Geometry.GeoPlotting.prototype.toJSON.apply(this,arguments)},clone:function(){for(var a=new OpenLayers.Geometry.GeoTriangleFlag,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},calculateParts:function(){this.components=[];if(1<this._controlPoints.length){var a=this._controlPoints[0],b=this._controlPoints[this._controlPoints.length-1],c=a.clone(),d=new OpenLayers.Geometry.Point(b.x,(a.y+b.y)/2),e=new OpenLayers.Geometry.Point(a.x,(a.y+b.y)/2),a=new OpenLayers.Geometry.Point(a.x,b.y);this.components.push(new OpenLayers.Geometry.LinearRing([c,d,e,a]))}},CLASS_NAME:"OpenLayers.Geometry.GeoTriangleFlag"});OpenLayers.Geometry.GeoTriangleFlag.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoTriangleFlag;a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoPlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoArc=OpenLayers.Class(OpenLayers.Geometry.GeoLinePlotting,{sides:720,initialize:function(a){OpenLayers.Geometry.GeoLinePlotting.prototype.initialize.apply(this,arguments)},toJSON:function(){return OpenLayers.Geometry.GeoLinePlotting.prototype.toJSON.apply(this,arguments)},clone:function(){for(var a=new OpenLayers.Geometry.GeoArc,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},calculateParts:function(){var a=this.cloneControlPoints(this._controlPoints);this.components=[];3>this._controlPoints.length&&(this.components=a);if(2<this._controlPoints.length){var b=a[0],c=a[1],d=a[2],a=this.calculateMidpoint(b,c),e=this.calculateMidpoint(c,d),f=new OpenLayers.Geometry.Point(c.x-b.x,c.y-b.y),g=new OpenLayers.Geometry.Point(d.x-c.x,d.y-c.y);if(1E-5>Math.abs(f.x*g.y-g.x*f.y))this.components.push(b,d,c);else{var f=this.calculateVector(f)[1],g=this.calculateVector(g)[1],a=this.calculateIntersection(f,g,a,e),e=this.calculateDistance(a,b),h=this.calculateAngle(b,a),k=this.calculateAngle(c,a),l=this.calculateAngle(d,a),d=Math.PI,m=1,g=h,p=k;h>k?(g=k,p=h,f=c):(f=b,b=c);c=p-g;if(l<k&&l<h||l>k&&l>h)m=-1,c=g+(2*d-p);h=d/this.sides/2;k=h*m;this.components.push(f);for(f=0;f<c-h;f+=h)g+=k,g=0>g?g+2*d:g,g=g>2*d?g-2*d:g,m=new OpenLayers.Geometry.Point(Math.cos(g)*e+a.x,Math.sin(g)*e+a.y),this.components.push(m);this.components.push(b)}}},calculateAngle:function(a,b){var c=Math.atan2(a.y-b.y,a.x-b.x);0>c&&(c+=2*Math.PI);return c},CLASS_NAME:"OpenLayers.Geometry.GeoArc"});OpenLayers.Geometry.GeoArc.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoArc;a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoLinePlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoBezierCurve2=OpenLayers.Class(OpenLayers.Geometry.GeoLinePlotting,{part:50,initialize:function(a){OpenLayers.Geometry.GeoLinePlotting.prototype.initialize.apply(this,arguments)},toJSON:function(){return OpenLayers.Geometry.GeoLinePlotting.prototype.toJSON.apply(this,arguments)},clone:function(){for(var a=new OpenLayers.Geometry.GeoBezierCurve2,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},calculateParts:function(){var a=this.cloneControlPoints(this._controlPoints);this.components=[];2==a.length?this.components=a:2<a.length&&(this.components=OpenLayers.Geometry.LineString.calculatePointsFBZ2(a,this.part))},CLASS_NAME:"OpenLayers.Geometry.GeoBezierCurve2"});OpenLayers.Geometry.GeoBezierCurve2.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoBezierCurve2;a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoLinePlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoBezierCurve3=OpenLayers.Class(OpenLayers.Geometry.GeoLinePlotting,{part:50,initialize:function(a){OpenLayers.Geometry.GeoLinePlotting.prototype.initialize.apply(this,arguments)},toJSON:function(){return OpenLayers.Geometry.GeoLinePlotting.prototype.toJSON.apply(this,arguments)},clone:function(){for(var a=new OpenLayers.Geometry.GeoBezierCurve3,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},calculateParts:function(){var a=this.cloneControlPoints(this._controlPoints);this.components=[];4>a.length?this.components=a:3<a.length&&(this.components=OpenLayers.Geometry.LineString.calculatePointsFBZ3(a,this.part))},CLASS_NAME:"OpenLayers.Geometry.GeoBezierCurve3"});OpenLayers.Geometry.GeoBezierCurve3.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoBezierCurve3;a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoLinePlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoBezierCurveN=OpenLayers.Class(OpenLayers.Geometry.GeoLinePlotting,{part:null,initialize:function(a){OpenLayers.Geometry.GeoLinePlotting.prototype.initialize.apply(this,arguments)},toJSON:function(){return OpenLayers.Geometry.GeoLinePlotting.prototype.toJSON.apply(this,arguments)},clone:function(){for(var a=new OpenLayers.Geometry.GeoBezierCurveN,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},calculateParts:function(){var a=this.cloneControlPoints(this._controlPoints);this.components=[];4>a.length?this.components=a:3<a.length&&(this.part||(this.part=10*a.length),this.components=OpenLayers.Geometry.LineString.calculatePointsFBZN(a,this.part))},CLASS_NAME:"OpenLayers.Geometry.GeoBezierCurveN"});OpenLayers.Geometry.GeoBezierCurveN.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoBezierCurveN;a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoLinePlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoCardinalCurve=OpenLayers.Class(OpenLayers.Geometry.GeoLinePlotting,{part:null,initialize:function(a){OpenLayers.Geometry.GeoLinePlotting.prototype.initialize.apply(this,arguments)},toJSON:function(){return OpenLayers.Geometry.GeoLinePlotting.prototype.toJSON.apply(this,arguments)},clone:function(){for(var a=new OpenLayers.Geometry.GeoCardinalCurve,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},calculateParts:function(){var a=this.cloneControlPoints(this._controlPoints);this.components=[];3>a.length?this.components=a:2<a.length&&(a=OpenLayers.Geometry.LineString.calculateCardinalPoints(a),this.part||(this.part=10*a.length),this.components=OpenLayers.Geometry.LineString.calculatePointsFBZ3(a,this.part))},CLASS_NAME:"OpenLayers.Geometry.GeoCardinalCurve"});OpenLayers.Geometry.GeoCardinalCurve.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoCardinalCurve;a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoLinePlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoFreeline=OpenLayers.Class(OpenLayers.Geometry.GeoLinePlotting,{initialize:function(a){OpenLayers.Geometry.GeoLinePlotting.prototype.initialize.apply(this,arguments)},toJSON:function(){return OpenLayers.Geometry.GeoLinePlotting.prototype.toJSON.apply(this,arguments)},clone:function(){for(var a=new OpenLayers.Geometry.GeoFreeline,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},calculateParts:function(){var a=this.cloneControlPoints(this._controlPoints);this.components=[];1<a.length&&(this.components=a)},CLASS_NAME:"OpenLayers.Geometry.GeoFreeline"});OpenLayers.Geometry.GeoFreeline.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoFreeline;a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoLinePlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoPolyline=OpenLayers.Class(OpenLayers.Geometry.GeoLinePlotting,{initialize:function(a){OpenLayers.Geometry.GeoLinePlotting.prototype.initialize.apply(this,arguments)},toJSON:function(){return OpenLayers.Geometry.GeoLinePlotting.prototype.toJSON.apply(this,arguments)},clone:function(){for(var a=new OpenLayers.Geometry.GeoPolyline,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},calculateParts:function(){var a=this.cloneControlPoints(this._controlPoints);this.components=[];1<a.length&&(this.components=a)},CLASS_NAME:"OpenLayers.Geometry.GeoPolyline"});OpenLayers.Geometry.GeoPolyline.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoPolyline;a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoLinePlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoMultiPoint=OpenLayers.Class(OpenLayers.Geometry.MultiPoint,{_controlPoints:[],isMultiPlotting:!0,initialize:function(a){OpenLayers.Geometry.MultiPoint.prototype.initialize.apply(this,arguments);(this._controlPoints=a)&&0<a.length&&this.calculateParts()},toJSON:function(){if(!this._controlPoints)return null;for(var a=this._controlPoints.length,b=[],c=0;c<a;c++)b.push(this.controlPointToJSON(this._controlPoints[c]));return'{"controlPoints":['+b.join(",")+"]}"},controlPointToJSON:function(a){return'{"x":  '+a.x+', "y": '+a.y+"}"},getControlPoints:function(){return this._controlPoints},setControlPoint:function(a){a&&a.length&&0<a.length&&(this._controlPoints=a,this.calculateParts())},clone:function(){for(var a=new OpenLayers.Geometry.GeoMultiPoint,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},calculateParts:function(){var a=this.cloneControlPoints(this._controlPoints);this.components=[];0<this._controlPoints.length&&(this.components=a)},cloneControlPoints:function(a){for(var b=[],c=0;c<a.length;c++)b.push(a[c].clone());return b},CLASS_NAME:"OpenLayers.Geometry.GeoMultiPoint"});OpenLayers.Geometry.GeoMultiPoint.getControlPointsFromJSON=function(a){var b=[];a=a.match(/{.*?}/g);for(var c=0,d=a.length;c<d;c++){var e=eval("("+a[c]+")");b.push(new OpenLayers.Geometry.Point(e.x,e.y))}return b};OpenLayers.Geometry.GeoMultiPoint.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoMultiPoint;a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.MultiPoint.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoPoint=OpenLayers.Class(OpenLayers.Geometry.Point,{_controlPoints:[],initialize:function(a){OpenLayers.Geometry.Point.prototype.initialize.apply(this,arguments);a&&a instanceof OpenLayers.Geometry.Point&&(this._controlPoints.push(a),this.calculateParts())},setControlPoint:function(a){a&&a instanceof OpenLayers.Geometry.Point&&(this._controlPoints=[a],this.calculateParts())},getControlPoint:function(){return this._controlPoints[0]},toJSON:function(){if(!this._controlPoints)return null;var a=this._controlPoints[0];return'{"controlPoints":[{"x":  '+a.x+', "y": '+a.y+"}]}"},clone:function(){var a=new OpenLayers.Geometry.GeoPoint,b=[];b.push(this._controlPoints[0].clone());a._controlPoints=b;return a},calculateParts:function(){if(0<this._controlPoints.length){var a=this._controlPoints[0].clone();this.x=a.x;this.y=a.y}},CLASS_NAME:"OpenLayers.Geometry.GeoPoint"});OpenLayers.Geometry.GeoPoint.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoPoint;a=a.match(/"controlPoints":(\[.*?\])/)[1].match(/{.*?}/g);a=eval("("+a[0]+")");a=[new OpenLayers.Geometry.Point(a.x,a.y)];b._controlPoints=a;return b};OpenLayers.Geometry.GeoCircle=OpenLayers.Class(OpenLayers.Geometry.GeoPlotting,{initialize:function(a){OpenLayers.Geometry.GeoPlotting.prototype.initialize.apply(this,arguments)},toJSON:function(){return OpenLayers.Geometry.GeoPlotting.prototype.toJSON.apply(this,arguments)},clone:function(){for(var a=new OpenLayers.Geometry.GeoCircle,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},calculateParts:function(){this.components=[];if(1<this._controlPoints.length){for(var a=this._controlPoints[0],b=this._controlPoints[this._controlPoints.length-1],c=[],b=Math.sqrt((b.x-a.x)*(b.x-a.x)+(b.y-a.y)*(b.y-a.y)),d=0;360>d;d++){var e=(d+1)*Math.PI/180,e=new OpenLayers.Geometry.Point(Math.cos(e)*b+a.x,Math.sin(e)*b+a.y);c[d]=e}this.components.push(new OpenLayers.Geometry.LinearRing(c))}},CLASS_NAME:"OpenLayers.Geometry.GeoCircle"});OpenLayers.Geometry.GeoCircle.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoCircle;a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoPlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoCloseCurve=OpenLayers.Class(OpenLayers.Geometry.GeoPlotting,{initialize:function(a){OpenLayers.Geometry.GeoPlotting.prototype.initialize.apply(this,arguments)},toJSON:function(){return OpenLayers.Geometry.GeoPlotting.prototype.toJSON.apply(this,arguments)},clone:function(){for(var a=new OpenLayers.Geometry.GeoCloseCurve,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},calculateParts:function(){var a=this.cloneControlPoints(this._controlPoints);this.components=[];2==a.length&&this.components.push(new OpenLayers.Geometry.LineString(a));2<a.length&&(a=OpenLayers.Geometry.LineString.createCloseCardinal(a),this.components.push(OpenLayers.Geometry.LineString.createBezier3(a,100)))},CLASS_NAME:"OpenLayers.Geometry.GeoCloseCurve"});OpenLayers.Geometry.GeoCloseCurve.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoCloseCurve;a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoPlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoEllipse=OpenLayers.Class(OpenLayers.Geometry.GeoPlotting,{sides:360,initialize:function(a){OpenLayers.Geometry.GeoPlotting.prototype.initialize.apply(this,arguments)},toJSON:function(){return OpenLayers.Geometry.GeoPlotting.prototype.toJSON.apply(this,arguments)},clone:function(){for(var a=new OpenLayers.Geometry.GeoEllipse,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},calculateParts:function(){this.components=[];if(1<this._controlPoints.length){var a=this._controlPoints[0],b=this._controlPoints[this._controlPoints.length-1],c=[],d=Math.sqrt(2)*Math.abs(b.y-a.y)/2,e,f,g=Math.PI*(1/this.sides-.5),h=b.x-a.x,k=b.y-a.y;f=0==k?h/(d*Math.sqrt(2)):h/k;for(var l=0;l<this.sides;++l)e=g+2*l*Math.PI/this.sides,b=a.x+f*d*Math.cos(e)+h/2,e=a.y+d*Math.sin(e)+k/2,c[l]=new OpenLayers.Geometry.Point(b,e);this.components.push(new OpenLayers.Geometry.LinearRing(c))}},CLASS_NAME:"OpenLayers.Geometry.GeoEllipse"});OpenLayers.Geometry.GeoEllipse.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoEllipse;a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoPlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoFreePolygon=OpenLayers.Class(OpenLayers.Geometry.GeoPlotting,{initialize:function(a){OpenLayers.Geometry.GeoPlotting.prototype.initialize.apply(this,arguments)},toJSON:function(){return OpenLayers.Geometry.GeoPlotting.prototype.toJSON.apply(this,arguments)},clone:function(){for(var a=new OpenLayers.Geometry.GeoFreePolygon,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},calculateParts:function(){var a=this.cloneControlPoints(this._controlPoints);this.components=[];1<a.length&&this.components.push(new OpenLayers.Geometry.LinearRing(a))},CLASS_NAME:"OpenLayers.Geometry.GeoFreePolygon"});OpenLayers.Geometry.GeoFreePolygon.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoFreePolygon;a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoLinePlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoGatheringPlace=OpenLayers.Class(OpenLayers.Geometry.GeoPlotting,{initialize:function(a){OpenLayers.Geometry.GeoPlotting.prototype.initialize.apply(this,arguments)},toJSON:function(){return OpenLayers.Geometry.GeoPlotting.prototype.toJSON.apply(this,arguments)},clone:function(){for(var a=new OpenLayers.Geometry.GeoGatheringPlace,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},calculateParts:function(){this.components=[];if(1<this._controlPoints.length){var a=this._controlPoints[0],b=this._controlPoints[this._controlPoints.length-1],c=[],d=new OpenLayers.Geometry.Point(b.x-a.x,b.y-a.y),e=Math.sqrt(d.x*d.x+d.y*d.y),f=this.calculateVector(d,Math.PI/3,Math.sqrt(3)/12*e)[0],f=new OpenLayers.Geometry.Point(f.x+a.x,f.y+a.y),g=new OpenLayers.Geometry.Point((a.x+b.x)/2,(a.y+b.y)/2),h=this.calculateVector(d,2*Math.PI/3,Math.sqrt(3)/12*e)[0],h=new OpenLayers.Geometry.Point(h.x+b.x,h.y+b.y),d=this.calculateVector(d,Math.PI/2,.5*e)[1],d=new OpenLayers.Geometry.Point(d.x+g.x,d.y+g.y),a=a.clone(),b=b.clone();c.push(a,f,g,h,b,d);c=OpenLayers.Geometry.LineString.createCloseCardinal(c);this.components.push(OpenLayers.Geometry.LineString.createBezier3(c,100))}},CLASS_NAME:"OpenLayers.Geometry.GeoGatheringPlace"});OpenLayers.Geometry.GeoGatheringPlace.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoGatheringPlace;a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoPlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoLune=OpenLayers.Class(OpenLayers.Geometry.GeoPlotting,{sides:720,initialize:function(a){OpenLayers.Geometry.GeoPlotting.prototype.initialize.apply(this,arguments)},toJSON:function(){return OpenLayers.Geometry.GeoPlotting.prototype.toJSON.apply(this,arguments)},clone:function(){for(var a=new OpenLayers.Geometry.GeoLune,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},calculateParts:function(){var a=this.cloneControlPoints(this._controlPoints);this.components=[];if(2==a.length){var b=a[0],c=a[1],d=this.calculateMidpoint(b,c),e=this.calculateDistance(b,c)/2,b=this.calculateAngle(b,d),d=this.calculateArc(d,e,b,b+Math.PI,-1);this.components.push(new OpenLayers.Geometry.LinearRing(d))}if(2<this._controlPoints.length){var b=a[0],c=a[1],f=a[2],d=[],e=this.calculateMidpoint(b,c),a=this.calculateMidpoint(c,f),g=new OpenLayers.Geometry.Point(c.x-b.x,c.y-b.y),h=new OpenLayers.Geometry.Point(f.x-c.x,f.y-c.y);if(1E-5>Math.abs(g.x*h.y-h.x*g.y))d.push(b,f,c);else{var g=this.calculateVector(g)[1],h=this.calculateVector(h)[1],a=this.calculateIntersection(g,h,e,a),e=this.calculateDistance(a,b),k=this.calculateAngle(b,a),l=this.calculateAngle(c,a),m=this.calculateAngle(f,a),f=Math.PI,p=1,h=k,n=l;k>l?(h=l,n=k,g=c):(g=b,b=c);c=n-h;if(m<l&&m<k||m>l&&m>k)p=-1,c=h+(2*f-n);k=f/this.sides/2;l=k*p;d.push(g);for(g=0;g<c-k;g+=k)h+=l,h=0>h?h+2*f:h,h=h>2*f?h-2*f:h,p=new OpenLayers.Geometry.Point(Math.cos(h)*e+a.x,Math.sin(h)*e+a.y),d.push(p);d.push(b);this.components.push(new OpenLayers.Geometry.LinearRing(d))}}},calculateAngle:function(a,b){var c=Math.atan2(a.y-b.y,a.x-b.x);0>c&&(c+=2*Math.PI);return c},CLASS_NAME:"OpenLayers.Geometry.GeoLune"});OpenLayers.Geometry.GeoLune.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoLune;a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoPlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoPolygonEx=OpenLayers.Class(OpenLayers.Geometry.GeoPlotting,{initialize:function(a){OpenLayers.Geometry.GeoPlotting.prototype.initialize.apply(this,arguments)},toJSON:function(){return OpenLayers.Geometry.GeoPlotting.prototype.toJSON.apply(this,arguments)},clone:function(){for(var a=new OpenLayers.Geometry.GeoPolygonEx,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},calculateParts:function(){var a=this.cloneControlPoints(this._controlPoints);this.components=[];2==a.length&&this.components.push(new OpenLayers.Geometry.LineString(a));2<a.length&&this.components.push(new OpenLayers.Geometry.LinearRing(a))},CLASS_NAME:"OpenLayers.Geometry.GeoPolygonEx"});OpenLayers.Geometry.GeoPolygonEx.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoPolygonEx;a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoPlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoRectangle=OpenLayers.Class(OpenLayers.Geometry.GeoPlotting,{initialize:function(a){OpenLayers.Geometry.GeoPlotting.prototype.initialize.apply(this,arguments)},toJSON:function(){return OpenLayers.Geometry.GeoPlotting.prototype.toJSON.apply(this,arguments)},clone:function(){for(var a=new OpenLayers.Geometry.GeoRectangle,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},calculateParts:function(){this.components=[];if(1<this._controlPoints.length){var a=this._controlPoints[0],b=this._controlPoints[this._controlPoints.length-1],c=a.clone(),d=new OpenLayers.Geometry.Point(b.x,a.y),e=b.clone(),a=new OpenLayers.Geometry.Point(a.x,b.y);this.components.push(new OpenLayers.Geometry.LinearRing([c,d,e,a]))}},CLASS_NAME:"OpenLayers.Geometry.GeoRectangle"});OpenLayers.Geometry.GeoRectangle.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoRectangle;a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoPlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoRoundedRect=OpenLayers.Class(OpenLayers.Geometry.GeoPlotting,{_ratio:.1,initialize:function(a){OpenLayers.Geometry.GeoPlotting.prototype.initialize.apply(this,arguments)},toJSON:function(){return OpenLayers.Geometry.GeoPlotting.prototype.toJSON.apply(this,arguments)},clone:function(){for(var a=new OpenLayers.Geometry.GeoRoundedRect,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},calculateParts:function(){this.components=[];if(1<this._controlPoints.length){var a=this._controlPoints[0],b=this._controlPoints[this._controlPoints.length-1],c=Math.max(a.x,b.x),d=Math.min(a.x,b.x),e=Math.max(a.y,b.y),f=Math.min(a.y,b.y),a=Math.min(Math.abs(a.x-b.x),Math.abs(a.y-b.y))*this._ratio,b=new OpenLayers.Geometry.Point(d+a,e-a),e=new OpenLayers.Geometry.Point(c-a,e-a),c=new OpenLayers.Geometry.Point(c-a,f+a),d=new OpenLayers.Geometry.Point(d+a,f+a),f=this.calculateArc(b,a,Math.PI,Math.PI/2,-1,180),b=this.calculateArc(e,a,Math.PI/2,0,-1,180),c=this.calculateArc(c,a,2*Math.PI,3*Math.PI/2,-1,180),a=this.calculateArc(d,a,3*Math.PI/2,Math.PI,-1,180),a=f.concat(b,c,a);this.components.push(new OpenLayers.Geometry.LinearRing(a))}},calculateArc:function(a,b,c,d,e,f){if(!e||1!=e&&-1!=e)e=-1;f||(f=360);f=Math.PI/f/2;e*=f;d=Math.abs(d-c);for(var g=[],h=0;h<d;h+=f){var k=new OpenLayers.Geometry.Point(Math.cos(c)*b+a.x,Math.sin(c)*b+a.y);g.push(k);c+=e;c=0>c?c+2*Math.PI:c;c=c>2*Math.PI?c-2*Math.PI:c}return g},CLASS_NAME:"OpenLayers.Geometry.GeoRoundedRect"});OpenLayers.Geometry.GeoRoundedRect.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoRoundedRect;a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoPlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};OpenLayers.Geometry.GeoSector=OpenLayers.Class(OpenLayers.Geometry.GeoPlotting,{direction:-1,initialize:function(a){OpenLayers.Geometry.GeoPlotting.prototype.initialize.apply(this,arguments)},toJSON:function(){return OpenLayers.Geometry.GeoPlotting.prototype.toJSON.apply(this,arguments)},clone:function(){for(var a=new OpenLayers.Geometry.GeoSector,b=[],c=0,d=this._controlPoints.length;c<d;c++)b.push(this._controlPoints[c].clone());a._controlPoints=b;return a},calculateParts:function(){var a=this.cloneControlPoints(this._controlPoints);this.components=[];2==a.length&&this.components.push(new OpenLayers.Geometry.LinearRing([a[0],a[1]]));if(2<a.length){var b=a[0],c=a[1],d=a[a.length-1],a=this.calculateDistance(b,c),c=this.calculateAngle(c,b),d=this.calculateAngle(d,b);1==this.direction&&d<c&&(d=2*Math.PI+d);-1==this.direction&&d>c&&(d=-(2*Math.PI-d));a=this.calculateArc(b,a,c,d,this.direction);a.unshift(b);this.components.push(new OpenLayers.Geometry.LinearRing(a))}},calculateAngle:function(a,b){var c=Math.atan2(a.y-b.y,a.x-b.x);0>c&&(c+=2*Math.PI);return c},calculateDistance:function(a,b){return Math.sqrt(Math.pow(a.x-b.x,2)+Math.pow(a.y-b.y,2))},calculateArc:function(a,b,c,d,e,f){if(!e||1!=e&&-1!=e)e=-1;f||(f=360);f=Math.PI/f/2;e*=f;d=Math.abs(d-c);for(var g=[],h=0;h<d;h+=f){var k=new OpenLayers.Geometry.Point(Math.cos(c)*b+a.x,Math.sin(c)*b+a.y);g.push(k);c+=e;c=0>c?c+2*Math.PI:c;c=c>2*Math.PI?c-2*Math.PI:c}return g},CLASS_NAME:"OpenLayers.Geometry.GeoSector"});OpenLayers.Geometry.GeoSector.fromJSON=function(a){var b=new OpenLayers.Geometry.GeoSector;a=a.match(/"controlPoints":(\[.*?\])/)[1];a=OpenLayers.Geometry.GeoPlotting.getControlPointsFromJSON(a);b._controlPoints=a;return b};