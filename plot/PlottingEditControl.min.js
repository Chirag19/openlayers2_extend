OpenLayers.Control.PlottingEdit=OpenLayers.Class(OpenLayers.Control,{EVENT_TYPES:["beforefeaturemodified","featuremodified","afterfeaturemodified"],clickout:!0,controlPointsStyle:null,defaultStyle:{fillColor:"#ee9900",fillOpacity:.4,strokeColor:"#ee9900",strokeOpacity:1,strokeWidth:1,pointRadius:6},controlPoints:[],layer:null,feature:null,selectControl:null,dragControl:null,modified:!1,initialize:function(a,c){c=c||{};this.layer=a;this.controlPoints=[];OpenLayers.Control.prototype.initialize.apply(this,[c]);var b=this;this.selectControl=new OpenLayers.Control.SelectFeature(a,{clickout:this.clickout,toggle:!1,onBeforeSelect:this.beforeSelectFeature,onSelect:this.selectFeature,onUnselect:this.unselectFeature,scope:this});this.dragControl=new OpenLayers.Control.DragFeature(a,{onStart:function(a,c){b.dragStart.apply(b,[a,c])},onDrag:function(a,c){b.dragControlPoint.apply(b,[a,c])},onComplete:function(a){b.dragComplete.apply(b,[a])},featureCallbacks:{over:function(a){b.dragControl.overFeature.apply(b.dragControl,[a])}}})},destroy:function(){this.controlPoints=[];this.layer=null;this.selectControl.destroy();this.dragControl.destroy();OpenLayers.Control.prototype.destroy.apply(this,[])},activate:function(){return this.selectControl.activate()&&OpenLayers.Control.prototype.activate.apply(this,arguments)},deactivate:function(){var a=!1;OpenLayers.Control.prototype.deactivate.apply(this,arguments)&&(this.layer.removeFeatures(this.controlPoints,{silent:!0}),this.controlPoints=[],this.dragControl.deactivate(),(a=this.feature)&&a.geometry&&a.layer&&this.selectControl.unselect.apply(this.selectControl,[a]),this.selectControl.deactivate(),a=!0);return a},deleteSymbol:function(){return this.feature&&this.controlPoints&&0<this.controlPoints.length?(this.layer.destroyFeatures(this.feature),this.layer.destroyFeatures(this.controlPoints),this.unselectFeature(this.feature),!0):!1},selectFeature:function(a){!1!==this.beforeSelectFeature(a)&&a.geometry instanceof OpenLayers.Geometry.GeoPlotting&&(this.feature=a,this.modified=!1,this.resetControlPoints(),this.dragControl.activate())},unselectFeature:function(a){this.layer.removeFeatures(this.controlPoints,{silent:!0});this.controlPoints=[];this.feature=null;this.dragControl.deactivate();this.layer.events.triggerEvent("afterfeaturemodified",{feature:a,modified:this.modified});this.modified=!1},beforeSelectFeature:function(a){return this.layer.events.triggerEvent("beforefeaturemodified",{feature:a})},dragStart:function(a,c){a!=this.feature&&a.geometry instanceof OpenLayers.Geometry.GeoPlotting&&this.feature.geometry instanceof OpenLayers.Geometry.GeoPlotting&&(this.feature&&this.selectControl.clickFeature.apply(this.selectControl,[this.feature]),this.selectControl.clickFeature.apply(this.selectControl,[a]),this.dragControl.overFeature.apply(this.dragControl,[a]),this.dragControl.lastPixel=c,this.dragControl.handlers.drag.started=!0,this.dragControl.handlers.drag.start=c,this.dragControl.handlers.drag.last=c);this._dragPixel=c;OpenLayers.Element.removeClass(this.map.viewPortDiv,"smDragDown");this.map.viewPortDiv.style.cursor="pointer"},dragControlPoint:function(a,c){if("OpenLayers.Geometry.Point"==a.geometry.CLASS_NAME){this.modified=!0;var b=this.feature.geometry;b._controlPoints=this.getCpGeos();b.calculateParts();this.layer.drawFeature(this.feature);this.layer.drawFeature(a)}else if(a.geometry instanceof OpenLayers.Geometry.GeoPlotting){this.modified=!0;this.layer.removeFeatures(this.controlPoints,{silent:!0});for(var b=this.layer.getLonLatFromViewPortPx(c),d=this.layer.getLonLatFromViewPortPx(this._dragPixel),e=this.getCpGeos(),f=0,g=e.length;f<g;f++)a=e[f],a.x+=b.lon-d.lon,a.y+=b.lat-d.lat;b=this.feature.geometry;b._controlPoints=e;this._dragPixel=c}},dragComplete:function(){delete this._dragPixel;this.resetControlPoints();this.setFeatureState();this.layer.events.triggerEvent("featuremodified",{feature:this.feature})},setFeatureState:function(){this.feature.state!=OpenLayers.State.INSERT&&this.feature.state!=OpenLayers.State.DELETE&&(this.feature.state=OpenLayers.State.UPDATE)},resetControlPoints:function(){0<this.controlPoints.length&&(this.layer.removeFeatures(this.controlPoints,{silent:!0}),this.controlPoints=[]);this.collectControlPoints()},collectControlPoints:function(){if(this.feature&&this.feature.geometry){this.controlPoints=[];var a=this.feature.geometry,c,b;if(a instanceof OpenLayers.Geometry.GeoPlotting){var d=a._controlPoints.length;for(c=0;c<d;++c)b=a._controlPoints[c],"OpenLayers.Geometry.Point"==b.CLASS_NAME&&(b=new OpenLayers.Feature.Vector(b),b._sketch=!0,b.style=OpenLayers.Util.copyAttributes(b.style,this.defaultStyle),this.controlPointsStyle&&(b.style=OpenLayers.Util.copyAttributes(b.style,this.controlPointsStyle)),this.controlPoints.push(b))}this.layer.addFeatures(this.controlPoints,{silent:!0})}},setMap:function(a){this.selectControl.setMap(a);this.dragControl.setMap(a);OpenLayers.Control.prototype.setMap.apply(this,arguments)},getCpGeos:function(){for(var a=this.controlPoints,c=[],b=0;b<a.length;b++)c.push(a[b].geometry);return c},cloneControlPoints:function(a){for(var c=[],b=0;b<a.length;b++)c.push(a[b].clone());return c},controlPointsToJSON:function(){if(this.feature&&this.feature.geometry&&this.feature.geometry instanceof OpenLayers.Geometry.GeoPlotting)return this.feature.geometry.toJSON()},CLASS_NAME:"OpenLayers.Control.PlottingEdit"});